
@{
  Layout = null;
}

@Scripts.Render("~/bundles/vue")
@Scripts.Render("~/bundles/element")
@Scripts.Render("~/bundles/axios")
@Scripts.Render("~/bundles/quill")
@Scripts.Render("~/bundles/vue-quill")

@Styles.Render("~/Content/elementcss")
@Styles.Render("~/Content/quillcss")

<!DOCTYPE html>

<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <title>安阳市人民警察训练学校在线考试系统-后台</title>
  <link href="~/Static/css/default.css" rel="stylesheet" />
  <style>
    .el-container {
      padding: 0 !important;
      /*flex-direction: column;*/
      height: 100vh;
    }

    .el-header {
      width: 100%;
      background-color: #081842;
      display: flex;
      justify-content: space-between;
      align-content: center;
    }

      .el-header h2 {
        display: inline-block;
        color: #fffffa;
        font-size: 20px;
        text-align: center;
        line-height: 60px;
      }

        .el-header h2 .logo-image {
          display: inline-block;
          height: 30px;
          vertical-align: middle;
          margin-right: 5px;
          position: relative;
          top: -1px;
        }

      .el-header .header-nav {
        display: inline-block;
        border-bottom: none;
      }

      .el-header .login-user {
        color: #fffffa;
        font-weight: 600;
      }

    .main-wrap {
      height: 80%;
      overflow: hidden;
    }

      .main-wrap .el-button--text {
        color: #303133;
      }


      .main-wrap .sub-btn {
        margin-left: 3rem;
      }

      .main-wrap .el-aside {
        height: 100%;
        width: 16% !important;
        background-color: #eef1f6;
        float: left;
        overflow: hidden;
      }

        .main-wrap .el-aside i {
          margin-right: 5px;
          line-height: 49px;
        }

      .main-wrap ul li {
        cursor: pointer;
        transition: background-color linear 300ms;
      }

        .main-wrap ul li.active {
          background-color: #d1dbe5;
        }

          .main-wrap ul li.active span {
            color: #1675ba;
          }

        .main-wrap ul li:hover {
          background-color: #ccc;
          transition: background-color linear 300ms;
        }

      .main-wrap .el-aside .el-collapse {
        background-color: #eef1f6;
      }

        .main-wrap .el-aside .el-collapse .el-collapse-item,
        .main-wrap .el-aside .el-collapse .el-collapse-item .el-collapse-item__header {
          background-color: #eef1f6;
        }

          .main-wrap .el-aside .el-collapse .el-collapse-item .el-collapse-item__header {
            padding-left: 20px;
            padding-right: 8px;
            font-size: 16px;
          }

          .main-wrap .el-aside .el-collapse .el-collapse-item .el-collapse-item__content {
            background-color: #E4E8F1;
            padding-bottom: 0;
          }

      .main-wrap .el-main {
        width: 84%;
        float: left;
        padding: 14px 20px;
      }

        .main-wrap .el-main .main-header {
          padding: 0 0 0.8rem 0.5rem;
          font-weight: 700;
        }

        .main-wrap .el-main .el-table {
          border: 1px solid #dfe6ec;
        }

          .main-wrap .el-main .el-table thead {
            color: #00000f;
          }

            .main-wrap .el-main .el-table thead th {
              height: 40px;
              box-sizing: border-box;
              padding: 0;
              background-color: #dfe6ec;
            }

          .main-wrap .el-main .el-table td {
            padding: 10px 0;
          }

        .main-wrap .el-main .search-wrap {
          display: flex;
          justify-content: start;
          background-color: #f2f2f2;
          padding: 10px 12px;
          align-items: center;
          border-radius: 8px;
          margin-bottom: 10px;
        }

          .main-wrap .el-main .search-wrap .el-input {
            width: 10rem;
            margin-right: 1rem;
          }

          .main-wrap .el-main .search-wrap .el-button {
            padding: 0 0.5rem;
            height: 2.2rem;
          }

        .main-wrap .el-main .pagination {
          padding: 14px 20px;
          background-color: #f2f2f2;
          border-radius: 8px;
          margin-top: 10px;
        }

          .main-wrap .el-main .pagination .el-pagination {
            float: right;
          }

          .main-wrap .el-main .pagination li.number {
            background-color: #fff;
          }


      .main-wrap .el-dialog {
        width: 25rem;
      }

    .el-table__empty-block {
      height: 60vh;
    }
  </style>
  <link href="~/Static/css/new-user.css" rel="stylesheet" />
  <link href="~/Static/css/edit-user.css" rel="stylesheet" />
  <link href="~/Static/css/score-table.css" rel="stylesheet" />
  <link href="~/Static/css/new-exam.css" rel="stylesheet" />
  <link href="~/Static/css/new-question.css" rel="stylesheet" />
  <link href="~/Static/css/tag-control.css" rel="stylesheet" />
  <link href="~/Static/css/question-table.css" rel="stylesheet" />
  <link href="~/Static/css/new-paper.css" rel="stylesheet" />
</head>
<body>
  <el-container id="app">
    <el-header>
      <h2>
        <img class="logo-image" src="~/Static/images/logo1.png" />
        <span>考试系统后台管理</span>
      </h2>
      <el-menu background-color="#081842" text-color="#fffffa" active-text-color="#fff000" class="header-nav" text mode="horizontal">
        <el-menu-item index="1"><el-link :underline="false" href="/Home/Index">返回首页</el-link></el-menu-item>
        <el-menu-item index="2">
          <el-dropdown @@command="toLogout" trigger="click">
            <span class="login-user">
              当前用户：{{loginUser}}
            </span>
            <el-dropdown-menu slot="dropdown">
              <el-dropdown-item command="toLogout">退出</el-dropdown-item>
            </el-dropdown-menu>
          </el-dropdown>
        </el-menu-item>
      </el-menu>
    </el-header>
    <el-container class="main-wrap">
      <el-aside>
        <el-collapse v-model="activeName">
          <el-collapse-item name="1">
            <template slot="title">
              <i class="el-icon-user-solid"></i>
              用户管理
            </template>
            <ul>
              <li :class="[currentTab === 'user-table' ? 'active': '' ]" @@click="changeTab('user-table')">
                <el-button type="text" class="sub-btn">用户列表</el-button>
              </li>
              <li :class="[currentTab === 'new-user' ? 'active': '' ]" @@click="changeTab('new-user')">
                <el-button type="text" class="sub-btn">添加新用户</el-button>
              </li>
              <li :class="[currentTab === 'score-table' ? 'active': '' ]" @@click="changeTab('score-table')">
                <el-button type="text" class="sub-btn">考生成绩/考试记录</el-button>
              </li>
            </ul>
          </el-collapse-item>
          <el-collapse-item title="" name="2">
            <template slot="title">
              <i class="el-icon-s-order"></i>
              场次管理
            </template>
            <ul>
              <li :class="[currentTab === 'exam-table' ? 'active': '' ]" @@click="changeTab('exam-table')">
                <el-button type="text" class="sub-btn">场次列表</el-button>
              </li>
              <li :class="[currentTab === 'new-exam' ? 'active': '' ]" @@click="changeTab('new-exam')">
                <el-button type="text" class="sub-btn">添加场次</el-button>
              </li>
              <li :class="[currentTab === 'change-user-exam' ? 'active': '' ]" @@click="changeTab('change-user-exam')">
                <el-button type="text" class="sub-btn">调整考生场次</el-button>
              </li>
            </ul>
          </el-collapse-item>
          <el-collapse-item title="" name="3">
            <template slot="title">
              <i class="el-icon-s-management"></i>
              试卷管理
            </template>
            <ul>
              <li :class="[currentTab === 'paper-table' ? 'active': '' ]" @@click="changeTab('paper-table')">
                <el-button type="text" class="sub-btn">试卷列表</el-button>
              </li>
              <li :class="[currentTab === 'new-paper' ? 'active': '' ]" @@click="changeTab('new-paper')">
                <el-button type="text" class="sub-btn">添加试卷</el-button>
              </li>
            </ul>
          </el-collapse-item>
          <el-collapse-item title="" name="4">
            <template slot="title">
              <i class="el-icon-s-cooperation"></i>
              题库管理
            </template>
            <ul>
              <li :class="[currentTab === 'question-table' ? 'active': '' ]" @@click="changeTab('question-table')">
                <el-button type="text" class="sub-btn">题目列表</el-button>
              </li>
              <li :class="[currentTab === 'new-question' ? 'active': '' ]" @@click="changeTab('new-question')">
                <el-button type="text" class="sub-btn">添加题目</el-button>
              </li>
              <li :class="[currentTab === 'tag-control' ? 'active': '' ]" @@click="changeTab('tag-control')">
                <el-button type="text" class="sub-btn">标签管理</el-button>
              </li>
            </ul>
          </el-collapse-item>
        </el-collapse>
      </el-aside>
      <el-main>
        <user-table :users="users"
                    :searchkey="searchKey"
                    :totalnum="totalNum"
                    v-if="currentTab === 'user-table'"
                    @@current-page="currentPageChange"
                    @@input-change="inputTextChange"
                    @@search="searchByKeyword"
                    @@remove="removeOne"
                    @@is-insert="refresh(currentPage)"
                    v-loading="isLoading"></user-table>
        <new-user v-if="currentTab === 'new-user'" @@is-insert="refresh"></new-user>
        <score-table class="score-component"
                     :searchkey="searchKey"
                     @@select-change="scoreSelectValueChange"
                     @@input-change="inputTextChange"
                     v-if="currentTab === 'score-table'"></score-table>
        <new-question v-if="currentTab === 'new-question'"></new-question>
        <new-paper v-if="currentTab === 'new-paper'"></new-paper>
        <new-exam v-if="currentTab === 'new-exam'"></new-exam>
        <exam-table v-if="currentTab === 'exam-table'"></exam-table>
        <change-user-exam v-if="currentTab === 'change-user-exam'"
                          @@input-change="inputTextChange"
                          :searchkey="searchKey"></change-user-exam>
        <tag-control v-if="currentTab === 'tag-control'"></tag-control>
        <question-table v-if="currentTab === 'question-table'"></question-table>
        <paper-table v-if="currentTab === 'paper-table'"></paper-table>
      </el-main>
    </el-container>
  </el-container>
</body>
</html>

@Scripts.Render("~/component/new-user")
@Scripts.Render("~/component/user-table")
@Scripts.Render("~/component/score-table")
@Scripts.Render("~/component/exam-table")
@Scripts.Render("~/component/change-user-exam")
@Scripts.Render("~/component/new-exam")
@Scripts.Render("~/component/new-paper")
@Scripts.Render("~/component/new-question")
@Scripts.Render("~/component/paper-table")
@Scripts.Render("~/component/question-table")
@Scripts.Render("~/component/tag-control")

<script>
  Vue.use(VueQuillEditor);
  const vm = new Vue({
    el: '#app',
    data: {
      currentTab: 'user-table',
      activeName: '1',
      users: [],
      searchKey: '',
      scoreSelectValue:'',
      totalNum: 100,
      currentPage: 1,
      loginUser: '',
      isLoading: true
    },
    methods: {
      // 切换组件
      changeTab: function (targetComponent) {
        this.currentTab = targetComponent;
      },
      // 改变当前页码
      currentPageChange: function (val) {
        this.currentPage = val;
      },
      // 改变搜索关键词
      inputTextChange: function (val) {
        this.searchKey = val;
      },
      // 更新用户列表
      updateUserList: function (pageIndex, keyword) {
        this.isLoading = true;
        axios.get('/BackEnd/UserTableChange', {
          params: {
            pageIndex,
            keyword
          }
        }).then(res => {
          this.isLoading = false;
          data = JSON.parse(
            JSON.parse(JSON.stringify(res.data)
              .replace(/=/g, ':')
              .replace('users', '\\"users\\"')
              .replace('totalCount', '\\"totalCount\\"'))
          );
          this.users = data.users;
          this.totalNum = data.totalCount;
        });
      },
      searchByKeyword: function () {
        this.updateUserList(1, this.searchKey);
      },
      // 删除用户
      removeOne: function (id) {
        this.$confirm('此操作将删除该记录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          axios.post('/BackEnd/RemoveUser', { id }).then(res => {
            const { data } = res;
            if (data.code == 0) {
              this.$message({
                type: 'success',
                message: data.message
              });
              this.updateUserList(this.currentPage, '');
            } else {
              this.$message.error(data.message);
            }
          });
        });
      },
      toLogout: function () {
        console.log('logout')
        localStorage.clear();
        window.location.href = '/Login/Logout';
      },
      // 刷新用户列表
      refresh: function(page = 1) {
        this.updateUserList(page, '');
        this.currentPage = page;
      },
      // 学生成绩表 日期选择
      scoreSelectValueChange: function (val) {
        this.scoreSelectValue = val;
      }
    },
    watch: {
      currentPage: function (val, oldVal) {
        this.updateUserList(val, this.searchKey);
      }
    },
    created() {
      this.isLoading = false;
      this.users = JSON.parse(@Html.Raw(Json.Encode(ViewBag.Users)));
      this.totalNum = @ViewBag.TotalNum;
      this.totalNumToScore = 1;
      if (new Date(localStorage.getItem('endTime')) < Date.now()) {
        localStorage.clear();
      }
      this.loginUser = localStorage.getItem('name') || '';
    }
  });
</script>
